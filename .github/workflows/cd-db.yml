name: Postgres CD Pipeline

on:
  workflow_run:
    workflows: ["Postgres CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: SSH into EC2 and update Docker container
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: | 
          # 아래 볼륨 삭제 & 생성 코드는 초기 배포떄에만 사용해야 함. 그러지 않으면 이어서 사용해야 하는 볼륨 데이터가 삭제되어 다시 초기 상태로 돌아감
          # 기존 볼륨 삭제 (기존 볼륨이 존재하면 DB에 기존 세팅한 데이터 init.sql파일이 실행되지 않아 기존 데이터 사용 불가)
          docker volume rm real-moment-volume || true
          # 새로운 볼륨 생성 (CD 파이프라인에서 볼륨을 생성해야 기존 init.sql파일을 실행하여 데이터 사용 가능)
          docker volume create real-moment-volume
          
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/rm-db:${{ github.sha }}
          docker stop rm-db || true 
          docker rm rm-db || true 
          docker run -d --name rm-db \
          -e POSTGRES_USER=${{ secrets.DB_USERNAME }} \
          -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -e POSTGRES_DB=${{ secrets.DB_NAME }} \
          -p 5432:5432 \
          --network real-moment-network \
          -v real-moment-volume:/var/lib/postgresql/data \
          ${{ secrets.DOCKERHUB_USERNAME }}/rm-db:${{ github.sha }}
